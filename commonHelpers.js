import{a as b,i as d,S as p}from"./assets/vendor-483db976.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const l of t.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const F="https://pixabay.com/api/",n={key:"42137546-386b5be41212ccd429cab5a80",image_type:"photo",orientation:"horizontal",safeSearch:!0,per_page:15,q:void 0,page:1};async function y(r="flower",o=20){return n.q=r,n.page=o,b.get(F,{params:{...n,page:o,q:r}})}const m={titleColor:"#FFFFFF",messageColor:"#FFFFFF",messageSize:"16px",position:"topRight",displayMode:"replace",closeOnEscape:!0,pauseOnHover:!1,maxWidth:432,messageSize:"16px",messageLineHeight:"24px"};function g(r){d.show({message:r,backgroundColor:"#EF4040",progressBarColor:"#FFE0AC",icon:"icon-close",...m})}function v(r){d.show({message:r,backgroundColor:"#59A10D",progressBarColor:"#B5EA7C",icon:"icon-chek",...m})}function L(r){d.show({message:r,backgroundColor:"#FFA500",progressBarColor:"#708090",icon:"icon-warning",...m})}const u="gallery-link";function f({largeImageURL:r,tags:o,webformatURL:s,likes:i,views:e,comments:t,downloads:l}){return`<a href="${r}" class="${u}">
    <figure>
     <img src="${s}" alt="${o}" class="gallery-image">
     <figcaption class="gallery__figcaption">
       <div class="image-item">Likes <span class="image-elem">${i}</span></div>
       <div class="image-item">Views <span class="image-elem">${e}</span></div>
       <div class="image-item">Comments <span class="image-elem">${t}</span></div>
       <div class="image-item">Downloads <span class="image-elem">${l}</span></div>
  </figcaption>
  </figure>
  </a>
  `}const S=document.querySelector(".gallery"),w=document.querySelector(".search-form"),$=document.querySelector(".loader"),q=document.querySelector(".loader-scroll"),a={galleryContainer:S,searchForm:w,loaderContainer:$,loaderScrollContainer:q};let h,c;const C=new IntersectionObserver(E,{threshold:0});a.searchForm.addEventListener("submit",async function(r){if(r.preventDefault(),n.q=r.target.elements.query.value,n.q!==""){a.galleryContainer.innerHTML="",a.loaderContainer.style.display="block";try{n.page=1;const{data:{hits:o,totalHits:s}}=await y(n.q,n.page);if(Array.isArray(o)&&o.length>0){const i=o.map(f).join("");a.galleryContainer.innerHTML+=i,new p(`.${u}`).refresh(),c=a.galleryContainer.children[a.galleryContainer.children.length-1],C.observe(c),h=s,v(`Was found: ${s} images`)}else g("Sorry, there are no images matching your search query. Please try again!")}catch(o){g(`Error fetching images: ${o}`)}finally{a.searchForm.reset(),a.loaderContainer.style.display="none"}}});async function E(r){const o=r[0];if(Math.ceil(h/n.per_page)<=n.page)return L("We're sorry, but you've reached the end of search results.");if(o.isIntersecting){a.loaderScrollContainer.style.display="block",n.page++;try{const{data:{hits:s}}=await y(n.q,n.page);if(Array.isArray(s)&&s.length>0){const i=s.map(f).join("");a.galleryContainer.innerHTML+=i,new p(`.${u}`).refresh(),c=a.galleryContainer.children[a.galleryContainer.children.length-1],C.observe(c)}}catch(s){g(`Error loading images: ${s.message}`)}finally{a.loaderScrollContainer.style.display="none"}}}
//# sourceMappingURL=commonHelpers.js.map
